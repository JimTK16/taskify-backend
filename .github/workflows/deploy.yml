- name: Execute deployment script on server
  env:
    SSH_USER: ${{ secrets.SSH_USER }}
    SSH_HOST: ${{ secrets.SSH_HOST }}
    SERVER_WORKDIR: ${{ secrets.SERVER_WORKDIR }}
  run: |
    echo "Runner sees SERVER_WORKDIR as: $SERVER_WORKDIR" # Debug on runner

    # Pass the variable explicitly into the remote shell's environment
    ssh $SSH_USER@$SSH_HOST "export SERVER_WORKDIR='${SERVER_WORKDIR}'; bash -s" << 'EOF'
      echo "--- DEBUG START ---"
      echo "Server received SERVER_WORKDIR as: $SERVER_WORKDIR" # Debug on server
      echo "Attempting to cd into: $SERVER_WORKDIR"
      cd "$SERVER_WORKDIR" # Use quotes around the variable just in case
      echo "Current directory after cd attempt: $(pwd)"
      echo "--- DEBUG END ---"

      # Pull the latest changes from the main branch
      echo ">>> Pulling latest code from origin main..."
      git checkout main # Ensure we are on the main branch
      git pull origin main

      # Install/update dependencies (important!)
      echo ">>> Installing dependencies..."
      npm install --production # Use --production if you don't need devDependencies

      # Run the build process (just the build part, not the server start)
      echo ">>> Building application..."
      npm run build

      # Restart the application using PM2
      echo ">>> Restarting application with PM2..."
      pm2 restart taskify-backend || pm2 start ./build/src/server.js --name taskify-backend # Start if not running, restart if running

      echo ">>> Deployment finished!"
    EOF
